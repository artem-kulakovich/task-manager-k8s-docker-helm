/*
 * This file is generated by jOOQ.
 */
package by.bntu.fitr.authenticationservice.dao.jooq.tables.records;


import by.bntu.fitr.authenticationservice.dao.jooq.tables.RolePermissions;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolePermissionsRecord extends TableRecordImpl<RolePermissionsRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.role_permissions.role_id</code>.
     */
    public RolePermissionsRecord setRoleId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.role_permissions.role_id</code>.
     */
    public Integer getRoleId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.role_permissions.permission_id</code>.
     */
    public RolePermissionsRecord setPermissionId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.role_permissions.permission_id</code>.
     */
    public Integer getPermissionId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RolePermissions.ROLE_PERMISSIONS.ROLE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return RolePermissions.ROLE_PERMISSIONS.PERMISSION_ID;
    }

    @Override
    public Integer component1() {
        return getRoleId();
    }

    @Override
    public Integer component2() {
        return getPermissionId();
    }

    @Override
    public Integer value1() {
        return getRoleId();
    }

    @Override
    public Integer value2() {
        return getPermissionId();
    }

    @Override
    public RolePermissionsRecord value1(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public RolePermissionsRecord value2(Integer value) {
        setPermissionId(value);
        return this;
    }

    @Override
    public RolePermissionsRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolePermissionsRecord
     */
    public RolePermissionsRecord() {
        super(RolePermissions.ROLE_PERMISSIONS);
    }

    /**
     * Create a detached, initialised RolePermissionsRecord
     */
    public RolePermissionsRecord(Integer roleId, Integer permissionId) {
        super(RolePermissions.ROLE_PERMISSIONS);

        setRoleId(roleId);
        setPermissionId(permissionId);
    }
}
