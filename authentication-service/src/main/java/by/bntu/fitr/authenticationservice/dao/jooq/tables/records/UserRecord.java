/*
 * This file is generated by jOOQ.
 */
package by.bntu.fitr.authenticationservice.dao.jooq.tables.records;


import by.bntu.fitr.authenticationservice.dao.jooq.tables.User;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record8<Long, String, String, String, String, String, OffsetDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user.id</code>.
     */
    public UserRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user.first_name</code>.
     */
    public UserRecord setFirstName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user.last_name</code>.
     */
    public UserRecord setLastName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user.last_name</code>.
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user.user_name</code>.
     */
    public UserRecord setUserName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user.user_name</code>.
     */
    public String getUserName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user.password</code>.
     */
    public UserRecord setPassword(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.user.password</code>.
     */
    public String getPassword() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user.email</code>.
     */
    public UserRecord setEmail(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.user.email</code>.
     */
    public String getEmail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.user.create_at</code>.
     */
    public UserRecord setCreateAt(OffsetDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.user.create_at</code>.
     */
    public OffsetDateTime getCreateAt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.user.role_id</code>.
     */
    public UserRecord setRoleId(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.user.role_id</code>.
     */
    public Integer getRoleId() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String, String, String, String, OffsetDateTime, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String, String, String, String, OffsetDateTime, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.LAST_NAME;
    }

    @Override
    public Field<String> field4() {
        return User.USER.USER_NAME;
    }

    @Override
    public Field<String> field5() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field6() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<OffsetDateTime> field7() {
        return User.USER.CREATE_AT;
    }

    @Override
    public Field<Integer> field8() {
        return User.USER.ROLE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getLastName();
    }

    @Override
    public String component4() {
        return getUserName();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    @Override
    public String component6() {
        return getEmail();
    }

    @Override
    public OffsetDateTime component7() {
        return getCreateAt();
    }

    @Override
    public Integer component8() {
        return getRoleId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getLastName();
    }

    @Override
    public String value4() {
        return getUserName();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    @Override
    public String value6() {
        return getEmail();
    }

    @Override
    public OffsetDateTime value7() {
        return getCreateAt();
    }

    @Override
    public Integer value8() {
        return getRoleId();
    }

    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value7(OffsetDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public UserRecord value8(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, OffsetDateTime value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String firstName, String lastName, String userName, String password, String email, OffsetDateTime createAt, Integer roleId) {
        super(User.USER);

        setId(id);
        setFirstName(firstName);
        setLastName(lastName);
        setUserName(userName);
        setPassword(password);
        setEmail(email);
        setCreateAt(createAt);
        setRoleId(roleId);
    }
}
